{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","_useState","useState","_useState2","_slicedToArray","enteredTitle","setEnteredTitle","_useState3","_useState4","enteredAmount","setEnteredAmount","_useState5","_useState6","enteredDate","setEnteredDate","React","createElement","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","_objectSpread","id","Math","random","toString","onAddExpense","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","ExpensesList","items","length","map","expense","key","ExpensesFilter","selected","onChangeFilter","CharBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","apply","_toConsumableArray","ChartBar","label1","ExpenseChart","_step","chartDataPoints","_iterator","_createForOfIteratorHelper","expenses","s","n","done","getMonth","err","e","f","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","concat","ReactDOM","createRoot","document","getElementById","render"],"mappings":"+ZA6EeA,SAzEK,SAACC,GAAU,IAAAC,EACWC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAAAI,EACML,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAAAG,EACAT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GA6BlC,OACEG,IAAAC,cAAA,QAAMC,SAhBc,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAc,CAClBC,MAAOhB,EACPiB,OAAQb,EACRc,KAAM,IAAIC,KAAKX,IAGjBb,EAAMyB,kBAAkBL,GACxBd,EAAgB,IAChBI,EAAiB,IACjBI,EAAe,MAKbC,IAAAC,cAAA,OAAKU,UAAU,yBACbX,IAAAC,cAAA,OAAKU,UAAU,wBACbX,IAAAC,cAAA,aAAO,SACPD,IAAAC,cAAA,SACEW,KAAK,OACLC,MAAOvB,EACPwB,SAnCiB,SAACX,GAC1BZ,EAAgBY,EAAMY,OAAOF,WAqCzBb,IAAAC,cAAA,OAAKU,UAAU,wBACbX,IAAAC,cAAA,aAAO,UACPD,IAAAC,cAAA,SACEW,KAAK,SACLI,IAAI,OACJC,KAAK,OACLJ,MAAOnB,EACPoB,SAzCkB,SAACX,GAC3BR,EAAiBQ,EAAMY,OAAOF,WA2C1Bb,IAAAC,cAAA,OAAKU,UAAU,wBACbX,IAAAC,cAAA,aAAO,QACPD,IAAAC,cAAA,SACEW,KAAK,OACLI,IAAI,aACJE,IAAI,aACJL,MAAOf,EACPgB,SA/CgB,SAACX,GACzBJ,EAAeI,EAAMY,OAAOF,YAmD1Bb,IAAAC,cAAA,OAAKU,UAAU,wBACfX,IAAAC,cAAA,UAAQW,KAAK,SAASO,QAASlC,EAAMmC,UAAU,UAC7CpB,IAAAC,cAAA,UAAQW,KAAK,UAAS,mBCjCfS,SAjCI,SAACpC,GAAU,IAAAC,EACMC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1CoC,EAASlC,EAAA,GAAEmC,EAAYnC,EAAA,GAiB9B,OACEY,IAAAC,cAAA,OAAKU,UAAU,gBACXW,GACAtB,IAAAC,cAAA,UAAQkB,QAVc,WAC1BI,GAAa,KAS6B,mBAEvCD,GACCtB,IAAAC,cAACjB,EAAW,CACV0B,kBAvBuB,SAACc,GAC9B,IAAMnB,EAAWoB,YAAA,GACZD,EAAkB,CACrBE,GAAIC,KAAKC,SAASC,aAEpB5C,EAAM6C,aAAazB,GACnBkB,GAAa,IAkBPH,SAZY,WAClBG,GAAa,SCFFQ,SAdK,SAAC9C,GACnB,IAAM+C,EAAQ/C,EAAMuB,KAAKyB,eAAe,QAAS,CAAED,MAAO,SACpDE,EAAMjD,EAAMuB,KAAKyB,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOlD,EAAMuB,KAAK4B,cAExB,OACEpC,IAAAC,cAAA,OAAKU,UAAU,gBACbX,IAAAC,cAAA,OAAKU,UAAU,uBAAuBqB,GACtChC,IAAAC,cAAA,OAAKU,UAAU,sBAAsBwB,GACrCnC,IAAAC,cAAA,OAAKU,UAAU,qBAAqBuB,MCH3BG,SANF,SAACpD,GACZ,IAAMqD,EAAU,QAAUrD,EAAM0B,UAEhC,OAAOX,IAAAC,cAAA,OAAKU,UAAW2B,GAAUrD,EAAMsD,YCa1BC,SAdK,SAACvD,GACnB,OACEe,IAAAC,cAAA,UACAD,IAAAC,cAACoC,EAAI,CAAC1B,UAAU,gBACdX,IAAAC,cAAC8B,EAAW,CAACvB,KAAMvB,EAAMuB,OACzBR,IAAAC,cAAA,OAAKU,UAAU,6BACbX,IAAAC,cAAA,UAAKhB,EAAMqB,OACXN,IAAAC,cAAA,OAAKU,UAAU,uBAAsB,IAAE1B,EAAMsB,aCQtCkC,SAlBO,SAACxD,GAEnB,OAA2B,IAAvBA,EAAMyD,MAAMC,OACL3C,IAAAC,cAAA,MAAIU,UAAU,2BAA0B,sBAGzCX,IAAAC,cAAA,MAAIU,UAAU,iBACnB1B,EAAMyD,MAAME,IAAI,SAACC,GAAO,OACrB7C,IAAAC,cAACuC,EAAW,CACZM,IAAKD,EAAQnB,GACbpB,MAAOuC,EAAQvC,MACfC,OAAQsC,EAAQtC,OAChBC,KAAMqC,EAAQrC,YCSXuC,SApBQ,SAAC9D,GAItB,OACEe,IAAAC,cAAA,OAAKU,UAAU,mBACbX,IAAAC,cAAA,OAAKU,UAAU,4BACbX,IAAAC,cAAA,aAAO,kBACPD,IAAAC,cAAA,UAAQY,MAAO5B,EAAM+D,SAAUlC,SAPL,SAACX,GAC3BlB,EAAMgE,eAAe9C,EAAMY,OAAOF,SAOhCb,IAAAC,cAAA,UAAQY,MAAM,QAAO,QACrBb,IAAAC,cAAA,UAAQY,MAAM,QAAO,QACrBb,IAAAC,cAAA,UAAQY,MAAM,QAAO,QACrBb,IAAAC,cAAA,UAAQY,MAAM,QAAO,QACrBb,IAAAC,cAAA,UAAQY,MAAM,QAAO,yBCKhBqC,MAnBf,SAAiBjE,GACf,IAAIkE,EAAgB,KAIpB,OAHIlE,EAAMmE,SAAW,IACnBD,EAAgBxB,KAAK0B,MAAOpE,EAAM4B,MAAQ5B,EAAMmE,SAAY,KAAO,KAGnEpD,IAAAC,cAAA,OAAKU,UAAU,aACbX,IAAAC,cAAA,OAAKU,UAAU,oBACbX,IAAAC,cAAA,OACEU,UAAU,kBACV2C,MAAO,CAAEC,OAAQJ,MAIrBnD,IAAAC,cAAA,OAAKU,UAAU,oBAAoB1B,EAAMuE,eCMhCC,MAnBf,SAAexE,GAEX,IAAMyE,EAAkBzE,EAAM0E,WAAWf,IAAI,SAAAgB,GAAS,OAAIA,EAAU/C,QAC9DgD,EAAWlC,KAAKT,IAAG4C,MAARnC,KAAIoC,YAAQL,IAC/B,OAEE1D,IAAAC,cAAA,OAAKU,UAAU,SACZ1B,EAAM0E,WAAWf,IAAI,SAACgB,GAAS,OAC9B5D,IAAAC,cAAC+D,EAAQ,CACPnD,MAAO+C,EAAU/C,MACjBuC,SAAUS,EACVL,MAAOI,EAAUJ,MACjBV,IAAKc,EAAUK,oiCCUVC,MAvBf,SAAsBjF,GAClB,IAeoCkF,EAf9BC,EAAkB,CACpB,CAACZ,MAAO,MAAO3C,MAAM,GACrB,CAAC2C,MAAO,MAAO3C,MAAM,GACrB,CAAC2C,MAAO,MAAO3C,MAAM,GACrB,CAAC2C,MAAO,MAAO3C,MAAM,GACrB,CAAC2C,MAAO,MAAO3C,MAAM,GACrB,CAAC2C,MAAO,MAAO3C,MAAM,GACrB,CAAC2C,MAAO,MAAO3C,MAAM,GACrB,CAAC2C,MAAO,MAAO3C,MAAM,GACrB,CAAC2C,MAAO,MAAO3C,MAAM,GACrB,CAAC2C,MAAO,MAAO3C,MAAM,GACrB,CAAC2C,MAAO,MAAO3C,MAAM,GACrB,CAAC2C,MAAO,MAAO3C,MAAM,IACxBwD,EAAAC,EAEqBrF,EAAMsF,UAAQ,IAApC,IAAAF,EAAAG,MAAAL,EAAAE,EAAAI,KAAAC,MAAqC,KAA1B7B,EAAOsB,EAAAtD,MAEduD,EADqBvB,EAAQrC,KAAKmE,YACJ9D,OAASgC,EAAQtC,QAClD,MAAAqE,GAAAP,EAAAQ,EAAAD,GAAA,QAAAP,EAAAS,IACD,OAAS9E,IAAAC,cAACwD,EAAK,CAACE,WAAcS,KCMnBW,MArBf,SAAkB9F,GAAO,IAAAC,EACiBC,mBAAS,QAAOC,EAAAC,YAAAH,EAAA,GAAjD8F,EAAY5F,EAAA,GAAE6F,EAAe7F,EAAA,GAK9B8F,EAAmBjG,EAAMyD,MAAMyC,OAAO,SAACtC,GAC3C,OAAOA,EAAQrC,KAAK4B,cAAcP,aAAemD,IAEnD,OACEhF,IAAAC,cAACoC,EAAI,CAAC1B,UAAU,YACdX,IAAAC,cAAC8C,EAAc,CACbE,eAVsB,SAACmC,GAC3BH,EAAgBG,IAUZpC,SAAUgC,IAEZhF,IAAAC,cAACiE,EAAY,CAACK,SAAYW,IACpBlF,IAAAC,cAACwC,EAAY,CAACC,MAAOwC,MCnB3BG,EAAiB,CACrB,CACE3D,GAAI,KACJpB,MAAO,eACPC,OAAQ,MACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CAAEiB,GAAI,KAAMpB,MAAO,SAAUC,OAAQ,OAAQC,KAAM,IAAIC,KAAK,KAAM,EAAG,KACrE,CACEiB,GAAI,KACJpB,MAAO,gBACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEiB,GAAI,KACJpB,MAAO,oBACPC,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,MAqBb6E,EAjBH,WAAM,IAAApG,EACgBC,mBAASkG,GAAejG,EAAAC,YAAAH,EAAA,GAAjDqF,EAAQnF,EAAA,GAAEmG,EAAWnG,EAAA,GAQ5B,OACEY,IAAAC,cAAA,WACED,IAAAC,cAACoB,EAAU,CAACS,aARU,SAACe,GACzB0C,EAAY,SAACC,GACX,OAAQ3C,GAAO4C,OAAA1B,YAAKyB,SAOpBxF,IAAAC,cAAC8E,EAAQ,CAACrC,MAAO6B,MClCVmB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACF9F,IAAAC,cAACqF,EAAG","file":"static/js/main.f6ff7330.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2023-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"new-expense__actions\">\r\n      <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const stopEditing = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditing}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from 'react';\r\n\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n    <Card className='expense-item'>\r\n      <ExpenseDate date={props.date} />\r\n      <div className='expense-item__description'>\r\n        <h2>{props.title}</h2>\r\n        <div className='expense-item__price'>${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css'\r\nconst ExpensesList  = (props) => {\r\n\r\n    if (props.items.length === 0){\r\n        return <h2 className='expenses-list__fallback'>Found no expenses.</h2>\r\n    }\r\n\r\n      return (<ul className='expenses-list'>\r\n        {props.items.map((expense)=>(\r\n            <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n      ))}\r\n      </ul>)\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value)\r\n    };\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2023'>2023</option>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React, { useState } from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nfunction CharBar(props) {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharBar;\r\n","import React, { useState } from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nfunction Chart(props) {\r\n\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\r\n    const totalMax = Math.max(...dataPointValues)\r\n  return (\r\n\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n          key={dataPoint.label1}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart'\r\n\r\nfunction ExpenseChart(props) {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value:0},\r\n        {label: 'Feb', value:0},\r\n        {label: 'Mar', value:0},\r\n        {label: 'Apr', value:0},\r\n        {label: 'May', value:0},\r\n        {label: 'Jun', value:0},\r\n        {label: 'Jul', value:0},\r\n        {label: 'Aug', value:0},\r\n        {label: 'Sep', value:0},\r\n        {label: 'Oct', value:0},\r\n        {label: 'Nov', value:0},\r\n        {label: 'Dec', value:0}\r\n    ]\r\n\r\n    for (const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return ( <Chart dataPoints = {chartDataPoints}/> );\r\n}\r\n\r\nexport default ExpenseChart;\r\n\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./Expenses.css\";\r\nimport ExpenseChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2023\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        onChangeFilter={filterChangeHandler}\r\n        selected={filteredYear}\r\n      />\r\n      <ExpenseChart expenses = {filteredExpenses}/>\r\n            <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2023, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2023, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2023, 1, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n   <App />\n \n);\n"],"sourceRoot":""}